# name of executable
ELF=$(notdir $(CURDIR)).elf                    

# Tool path
TOOLROOT=/home/konrad/Programming/eb/STM32/toolchain/gcc-arm-none-eabi-5_2-2015q4/bin

# Libroot path
LIBROOT=/home/konrad/Programming/eb/STM32/toolchain/firmware

# Tools
CPP=$(TOOLROOT)/arm-none-eabi-g++
CC=$(TOOLROOT)/arm-none-eabi-gcc
LD=$(TOOLROOT)/arm-none-eabi-gcc
AR=$(TOOLROOT)/arm-none-eabi-ar
AS=$(TOOLROOT)/arm-none-eabi-as

# Library paths
CORE=$(LIBROOT)/CORE
STDPERIPH=$(LIBROOT)/StdPeriph_Driver
HAL=$(LIBROOT)/STM32Cube_FW_F1_V1.3.0/Drivers/STM32F1xx_HAL_Driver

# Search path for core files
vpath %.c $(CORE)/src
vpath %.s $(CORE)/src
vpath %.c $(STDPERIPH)/src
vpath %.c $(HAL)/Src

#  Processor specific
LDSCRIPT=$(CORE)/linker/STM32F100XB_FLASH.ld
STARTUP=startup_stm32f100xb.o system_stm32f1xx.o 
PTYPE=STM32F10X_MD_VL
MTYPE=ARM_MATH_CM3

# Compilation Flags
LDFLAGS+= -T$(LDSCRIPT) -mcpu=cortex-m3 -mthumb -mfloat-abi=soft
LDFLAGS+= -D$(MTYPE) -specs=nosys.specs
LDFLAGS+= -Wall -Wl,-gc-sections,-u,main
CFLAGS+= -mcpu=cortex-m3 -mthumb -mfloat-abi=soft
CFLAGS+= -Wall
CFLAGS+= -fdata-sections
CFLAGS+= -I$(CORE)/inc -I$(STDPERIPH)/inc -I$(HAL)/Inc -I.
CFLAGS+= -D$(PTYPE) -D$(MTYPE)
CFLAGS+= -std=gnu99

# Build executable
$(ELF) : $(OBJS)
	$(LD) $(LDFLAGS) -o $@ $(OBJS) 

# compile and generate dependency info
%.o: %.c
	$(CC) -c $(CFLAGS) $< -o $@

%.o: %.s
	$(CC) -c $(CFLAGS) $< -o $@

clean:
	rm -f $(OBJS) $(OBJS:.o=.d) $(ELF) startup_stm32f* $(CLEANOTHER)

debug: $(ELF)
	armeb-unknown-eabi-gdb $(ELF)

# pull in dependencies
-include $(OBJS:.o=.d)




